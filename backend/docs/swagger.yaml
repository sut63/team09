basePath: /api/v1
definitions:
  ent.Playlist:
    properties:
      edges:
        $ref: '#/definitions/ent.PlaylistEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PlaylistQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      title:
        description: Title holds the value of the "title" field.
        type: string
    type: object
  ent.Playlist_Video:
    properties:
      added_time:
        description: AddedTime holds the value of the "added_time" field.
        type: string
      edges:
        $ref: '#/definitions/ent.Playlist_VideoEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the Playlist_VideoQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.Playlist_VideoEdges:
    properties:
      playlist:
        $ref: '#/definitions/ent.Playlist'
        description: Playlist holds the value of the playlist edge.
        type: object
      resolution:
        $ref: '#/definitions/ent.Resolution'
        description: Resolution holds the value of the resolution edge.
        type: object
      video:
        $ref: '#/definitions/ent.Video'
        description: Video holds the value of the video edge.
        type: object
    type: object
  ent.PlaylistEdges:
    properties:
      owner:
        $ref: '#/definitions/ent.User'
        description: Owner holds the value of the owner edge.
        type: object
      playlistVideos:
        description: PlaylistVideos holds the value of the playlist_videos edge.
        items:
          $ref: '#/definitions/ent.Playlist_Video'
        type: array
    type: object
  ent.Resolution:
    properties:
      edges:
        $ref: '#/definitions/ent.ResolutionEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ResolutionQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      value:
        description: Value holds the value of the "value" field.
        type: integer
    type: object
  ent.ResolutionEdges:
    properties:
      playlistVideos:
        description: PlaylistVideos holds the value of the playlist_videos edge.
        items:
          $ref: '#/definitions/ent.Playlist_Video'
        type: array
    type: object
  ent.User:
    properties:
      edges:
        $ref: '#/definitions/ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
        type: object
      email:
        description: Email holds the value of the "email" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.UserEdges:
    properties:
      playlists:
        description: Playlists holds the value of the playlists edge.
        items:
          $ref: '#/definitions/ent.Playlist'
        type: array
      videos:
        description: Videos holds the value of the videos edge.
        items:
          $ref: '#/definitions/ent.Video'
        type: array
    type: object
  ent.Video:
    properties:
      edges:
        $ref: '#/definitions/ent.VideoEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the VideoQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
      url:
        description: URL holds the value of the "url" field.
        type: string
    type: object
  ent.VideoEdges:
    properties:
      owner:
        $ref: '#/definitions/ent.User'
        description: Owner holds the value of the owner edge.
        type: object
      playlistVideos:
        description: PlaylistVideos holds the value of the playlist_videos edge.
        items:
          $ref: '#/definitions/ent.Playlist_Video'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API Playlist Vidoe
  version: "1.0"
paths:
  /playlist-videos:
    get:
      description: list playlist-video entities
      operationId: list-playlist-video
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Playlist_Video'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List playlist-video entities
    post:
      consumes:
      - application/json
      description: Create playlist-video
      operationId: create-playlist-video
      parameters:
      - description: Playlist_Video entity
        in: body
        name: playlist-video
        required: true
        schema:
          $ref: '#/definitions/ent.Playlist_Video'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Playlist_Video'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create playlist-video
  /playlists:
    get:
      description: list playlist entities
      operationId: list-playlist
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Playlist'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List playlist entities
    post:
      consumes:
      - application/json
      description: Create playlist
      operationId: create-playlist
      parameters:
      - description: Playlist entity
        in: body
        name: playlist
        required: true
        schema:
          $ref: '#/definitions/ent.Playlist'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Playlist'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create playlist
  /playlists/{id}:
    get:
      description: get playlist by ID
      operationId: get-playlist
      parameters:
      - description: Playlist ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Playlist'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a playlist entity by ID
  /resolutions:
    get:
      description: list resolution entities
      operationId: list-resolution
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Resolution'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List resolution entities
    post:
      consumes:
      - application/json
      description: Create resolution
      operationId: create-resolution
      parameters:
      - description: Resolution entity
        in: body
        name: resolution
        required: true
        schema:
          $ref: '#/definitions/ent.Resolution'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Resolution'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create resolution
  /resolutions/{id}:
    get:
      description: get resolution by ID
      operationId: get-resolution
      parameters:
      - description: Resolution ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Resolution'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a resolution entity by ID
  /users:
    get:
      description: list user entities
      operationId: list-user
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List user entities
    post:
      consumes:
      - application/json
      description: Create user
      operationId: create-user
      parameters:
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create user
  /users/{id}:
    delete:
      description: get user by ID
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a user entity by ID
    get:
      description: get user by ID
      operationId: get-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a user entity by ID
    put:
      consumes:
      - application/json
      description: update user by ID
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a user entity by ID
  /videos:
    get:
      description: list video entities
      operationId: list-video
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Video'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List video entities
    post:
      consumes:
      - application/json
      description: Create video
      operationId: create-video
      parameters:
      - description: Video entity
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/ent.Video'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Video'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create video
  /videos/{id}:
    delete:
      description: get video by ID
      operationId: delete-video
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a video entity by ID
    get:
      description: get video by ID
      operationId: get-video
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Video'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a video entity by ID
    put:
      consumes:
      - application/json
      description: update video by ID
      operationId: update-video
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        type: integer
      - description: Video entity
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/ent.Video'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Video'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a video entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
