// Code generated by entc, DO NOT EDIT.

package office

const (
	// Label holds the string label denoting the office type in the database.
	Label = "office"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOfficename holds the string denoting the officename field in the database.
	FieldOfficename = "officename"

	// EdgeDoctor holds the string denoting the doctor edge name in mutations.
	EdgeDoctor = "doctor"
	// EdgeWorkingtime holds the string denoting the workingtime edge name in mutations.
	EdgeWorkingtime = "workingtime"
	// EdgeDepartment holds the string denoting the department edge name in mutations.
	EdgeDepartment = "department"
	// EdgeSpeacialDoctor holds the string denoting the speacial_doctor edge name in mutations.
	EdgeSpeacialDoctor = "speacial_doctor"
	// EdgeSchedules holds the string denoting the schedules edge name in mutations.
	EdgeSchedules = "schedules"

	// Table holds the table name of the office in the database.
	Table = "offices"
	// DoctorTable is the table the holds the doctor relation/edge.
	DoctorTable = "offices"
	// DoctorInverseTable is the table name for the Doctor entity.
	// It exists in this package in order to avoid circular dependency with the "doctor" package.
	DoctorInverseTable = "doctors"
	// DoctorColumn is the table column denoting the doctor relation/edge.
	DoctorColumn = "doctor_id"
	// WorkingtimeTable is the table the holds the workingtime relation/edge.
	WorkingtimeTable = "offices"
	// WorkingtimeInverseTable is the table name for the Workingtime entity.
	// It exists in this package in order to avoid circular dependency with the "workingtime" package.
	WorkingtimeInverseTable = "workingtimes"
	// WorkingtimeColumn is the table column denoting the workingtime relation/edge.
	WorkingtimeColumn = "workingtime_id"
	// DepartmentTable is the table the holds the department relation/edge.
	DepartmentTable = "offices"
	// DepartmentInverseTable is the table name for the Department entity.
	// It exists in this package in order to avoid circular dependency with the "department" package.
	DepartmentInverseTable = "departments"
	// DepartmentColumn is the table column denoting the department relation/edge.
	DepartmentColumn = "department_id"
	// SpeacialDoctorTable is the table the holds the speacial_doctor relation/edge.
	SpeacialDoctorTable = "offices"
	// SpeacialDoctorInverseTable is the table name for the Special_Doctor entity.
	// It exists in this package in order to avoid circular dependency with the "special_doctor" package.
	SpeacialDoctorInverseTable = "special_doctors"
	// SpeacialDoctorColumn is the table column denoting the speacial_doctor relation/edge.
	SpeacialDoctorColumn = "special_doctor_id"
	// SchedulesTable is the table the holds the schedules relation/edge.
	SchedulesTable = "schedules"
	// SchedulesInverseTable is the table name for the Schedule entity.
	// It exists in this package in order to avoid circular dependency with the "schedule" package.
	SchedulesInverseTable = "schedules"
	// SchedulesColumn is the table column denoting the schedules relation/edge.
	SchedulesColumn = "office_id"
)

// Columns holds all SQL columns for office fields.
var Columns = []string{
	FieldID,
	FieldOfficename,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Office type.
var ForeignKeys = []string{
	"department_id",
	"doctor_id",
	"special_doctor_id",
	"workingtime_id",
}

var (
	// OfficenameValidator is a validator for the "officename" field. It is called by the builders before save.
	OfficenameValidator func(string) error
)
