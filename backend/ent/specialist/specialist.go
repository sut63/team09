// Code generated by entc, DO NOT EDIT.

package specialist

const (
	// Label holds the string label denoting the specialist type in the database.
	Label = "specialist"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSpecialist holds the string denoting the specialist field in the database.
	FieldSpecialist = "specialist"

	// EdgeDoctors holds the string denoting the doctors edge name in mutations.
	EdgeDoctors = "doctors"
	// EdgeDepartments holds the string denoting the departments edge name in mutations.
	EdgeDepartments = "departments"
	// EdgeOffices holds the string denoting the offices edge name in mutations.
	EdgeOffices = "offices"

	// Table holds the table name of the specialist in the database.
	Table = "specialists"
	// DoctorsTable is the table the holds the doctors relation/edge.
	DoctorsTable = "doctors"
	// DoctorsInverseTable is the table name for the Doctor entity.
	// It exists in this package in order to avoid circular dependency with the "doctor" package.
	DoctorsInverseTable = "doctors"
	// DoctorsColumn is the table column denoting the doctors relation/edge.
	DoctorsColumn = "specialist_id"
	// DepartmentsTable is the table the holds the departments relation/edge.
	DepartmentsTable = "departments"
	// DepartmentsInverseTable is the table name for the Department entity.
	// It exists in this package in order to avoid circular dependency with the "department" package.
	DepartmentsInverseTable = "departments"
	// DepartmentsColumn is the table column denoting the departments relation/edge.
	DepartmentsColumn = "specialist_id"
	// OfficesTable is the table the holds the offices relation/edge.
	OfficesTable = "offices"
	// OfficesInverseTable is the table name for the Office entity.
	// It exists in this package in order to avoid circular dependency with the "office" package.
	OfficesInverseTable = "offices"
	// OfficesColumn is the table column denoting the offices relation/edge.
	OfficesColumn = "specialist_id"
)

// Columns holds all SQL columns for specialist fields.
var Columns = []string{
	FieldID,
	FieldSpecialist,
}

var (
	// SpecialistValidator is a validator for the "specialist" field. It is called by the builders before save.
	SpecialistValidator func(string) error
)
