// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/team09/app/ent/department"
	"github.com/team09/app/ent/disease"
	"github.com/team09/app/ent/doctor"
	"github.com/team09/app/ent/gender"
	"github.com/team09/app/ent/mission"
	"github.com/team09/app/ent/office"
	"github.com/team09/app/ent/position"
	"github.com/team09/app/ent/schedule"
	"github.com/team09/app/ent/schema"
	"github.com/team09/app/ent/speacial_doctor"
	"github.com/team09/app/ent/title"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	departmentFields := schema.Department{}.Fields()
	_ = departmentFields
	// departmentDescDepartmentType is the schema descriptor for DepartmentType field.
	departmentDescDepartmentType := departmentFields[0].Descriptor()
	// department.DepartmentTypeValidator is a validator for the "DepartmentType" field. It is called by the builders before save.
	department.DepartmentTypeValidator = departmentDescDepartmentType.Validators[0].(func(string) error)
	// departmentDescName is the schema descriptor for Name field.
	departmentDescName := departmentFields[1].Descriptor()
	// department.NameValidator is a validator for the "Name" field. It is called by the builders before save.
	department.NameValidator = departmentDescName.Validators[0].(func(string) error)
	diseaseFields := schema.Disease{}.Fields()
	_ = diseaseFields
	// diseaseDescDisease is the schema descriptor for disease field.
	diseaseDescDisease := diseaseFields[0].Descriptor()
	// disease.DiseaseValidator is a validator for the "disease" field. It is called by the builders before save.
	disease.DiseaseValidator = diseaseDescDisease.Validators[0].(func(string) error)
	doctorFields := schema.Doctor{}.Fields()
	_ = doctorFields
	// doctorDescName is the schema descriptor for name field.
	doctorDescName := doctorFields[0].Descriptor()
	// doctor.NameValidator is a validator for the "name" field. It is called by the builders before save.
	doctor.NameValidator = doctorDescName.Validators[0].(func(string) error)
	// doctorDescAge is the schema descriptor for age field.
	doctorDescAge := doctorFields[1].Descriptor()
	// doctor.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	doctor.AgeValidator = doctorDescAge.Validators[0].(func(int) error)
	// doctorDescEmail is the schema descriptor for email field.
	doctorDescEmail := doctorFields[2].Descriptor()
	// doctor.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	doctor.EmailValidator = doctorDescEmail.Validators[0].(func(string) error)
	// doctorDescPnumber is the schema descriptor for pnumber field.
	doctorDescPnumber := doctorFields[3].Descriptor()
	// doctor.PnumberValidator is a validator for the "pnumber" field. It is called by the builders before save.
	doctor.PnumberValidator = doctorDescPnumber.Validators[0].(func(int) error)
	// doctorDescAddress is the schema descriptor for address field.
	doctorDescAddress := doctorFields[4].Descriptor()
	// doctor.AddressValidator is a validator for the "address" field. It is called by the builders before save.
	doctor.AddressValidator = doctorDescAddress.Validators[0].(func(string) error)
	// doctorDescEducational is the schema descriptor for educational field.
	doctorDescEducational := doctorFields[5].Descriptor()
	// doctor.EducationalValidator is a validator for the "educational" field. It is called by the builders before save.
	doctor.EducationalValidator = doctorDescEducational.Validators[0].(func(string) error)
	genderFields := schema.Gender{}.Fields()
	_ = genderFields
	// genderDescGender is the schema descriptor for gender field.
	genderDescGender := genderFields[0].Descriptor()
	// gender.GenderValidator is a validator for the "gender" field. It is called by the builders before save.
	gender.GenderValidator = genderDescGender.Validators[0].(func(string) error)
	missionFields := schema.Mission{}.Fields()
	_ = missionFields
	// missionDescMissionType is the schema descriptor for MissionType field.
	missionDescMissionType := missionFields[0].Descriptor()
	// mission.MissionTypeValidator is a validator for the "MissionType" field. It is called by the builders before save.
	mission.MissionTypeValidator = missionDescMissionType.Validators[0].(func(string) error)
	officeFields := schema.Office{}.Fields()
	_ = officeFields
	// officeDescOfficename is the schema descriptor for officename field.
	officeDescOfficename := officeFields[0].Descriptor()
	// office.OfficenameValidator is a validator for the "officename" field. It is called by the builders before save.
	office.OfficenameValidator = officeDescOfficename.Validators[0].(func(string) error)
	positionFields := schema.Position{}.Fields()
	_ = positionFields
	// positionDescPosition is the schema descriptor for position field.
	positionDescPosition := positionFields[0].Descriptor()
	// position.PositionValidator is a validator for the "position" field. It is called by the builders before save.
	position.PositionValidator = positionDescPosition.Validators[0].(func(string) error)
	scheduleFields := schema.Schedule{}.Fields()
	_ = scheduleFields
	// scheduleDescActivity is the schema descriptor for activity field.
	scheduleDescActivity := scheduleFields[0].Descriptor()
	// schedule.ActivityValidator is a validator for the "activity" field. It is called by the builders before save.
	schedule.ActivityValidator = scheduleDescActivity.Validators[0].(func(string) error)
	speacial_doctorFields := schema.Speacial_doctor{}.Fields()
	_ = speacial_doctorFields
	// speacial_doctorDescName is the schema descriptor for name field.
	speacial_doctorDescName := speacial_doctorFields[0].Descriptor()
	// speacial_doctor.NameValidator is a validator for the "name" field. It is called by the builders before save.
	speacial_doctor.NameValidator = speacial_doctorDescName.Validators[0].(func(string) error)
	titleFields := schema.Title{}.Fields()
	_ = titleFields
	// titleDescTitle is the schema descriptor for title field.
	titleDescTitle := titleFields[0].Descriptor()
	// title.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	title.TitleValidator = titleDescTitle.Validators[0].(func(string) error)
}
