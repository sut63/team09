// Code generated by entc, DO NOT EDIT.

package department

const (
	// Label holds the string label denoting the department type in the database.
	Label = "department"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"

	// EdgeDetails holds the string denoting the details edge name in mutations.
	EdgeDetails = "details"
	// EdgeOffices holds the string denoting the offices edge name in mutations.
	EdgeOffices = "offices"
	// EdgeSchedules holds the string denoting the schedules edge name in mutations.
	EdgeSchedules = "schedules"
	// EdgeTrainings holds the string denoting the trainings edge name in mutations.
	EdgeTrainings = "trainings"
	// EdgeSpecialdoctors holds the string denoting the specialdoctors edge name in mutations.
	EdgeSpecialdoctors = "specialdoctors"

	// Table holds the table name of the department in the database.
	Table = "departments"
	// DetailsTable is the table the holds the details relation/edge.
	DetailsTable = "details"
	// DetailsInverseTable is the table name for the Detail entity.
	// It exists in this package in order to avoid circular dependency with the "detail" package.
	DetailsInverseTable = "details"
	// DetailsColumn is the table column denoting the details relation/edge.
	DetailsColumn = "department_id"
	// OfficesTable is the table the holds the offices relation/edge.
	OfficesTable = "offices"
	// OfficesInverseTable is the table name for the Office entity.
	// It exists in this package in order to avoid circular dependency with the "office" package.
	OfficesInverseTable = "offices"
	// OfficesColumn is the table column denoting the offices relation/edge.
	OfficesColumn = "department_id"
	// SchedulesTable is the table the holds the schedules relation/edge.
	SchedulesTable = "schedules"
	// SchedulesInverseTable is the table name for the Schedule entity.
	// It exists in this package in order to avoid circular dependency with the "schedule" package.
	SchedulesInverseTable = "schedules"
	// SchedulesColumn is the table column denoting the schedules relation/edge.
	SchedulesColumn = "department_id"
	// TrainingsTable is the table the holds the trainings relation/edge.
	TrainingsTable = "trainings"
	// TrainingsInverseTable is the table name for the Training entity.
	// It exists in this package in order to avoid circular dependency with the "training" package.
	TrainingsInverseTable = "trainings"
	// TrainingsColumn is the table column denoting the trainings relation/edge.
	TrainingsColumn = "department_id"
	// SpecialdoctorsTable is the table the holds the specialdoctors relation/edge.
	SpecialdoctorsTable = "specialdoctors"
	// SpecialdoctorsInverseTable is the table name for the Specialdoctor entity.
	// It exists in this package in order to avoid circular dependency with the "specialdoctor" package.
	SpecialdoctorsInverseTable = "specialdoctors"
	// SpecialdoctorsColumn is the table column denoting the specialdoctors relation/edge.
	SpecialdoctorsColumn = "department_id"
)

// Columns holds all SQL columns for department fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Department type.
var ForeignKeys = []string{
	"doctor_id",
	"mission_id",
}

var (
	// NameValidator is a validator for the "Name" field. It is called by the builders before save.
	NameValidator func(string) error
)
