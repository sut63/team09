// Code generated by entc, DO NOT EDIT.

package department

const (
	// Label holds the string label denoting the department type in the database.
	Label = "department"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDepartmentType holds the string denoting the departmenttype field in the database.
	FieldDepartmentType = "department_type"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"

	// EdgeMission holds the string denoting the mission edge name in mutations.
	EdgeMission = "mission"
	// EdgeDoctor holds the string denoting the doctor edge name in mutations.
	EdgeDoctor = "doctor"
	// EdgeOffices holds the string denoting the offices edge name in mutations.
	EdgeOffices = "offices"

	// Table holds the table name of the department in the database.
	Table = "departments"
	// MissionTable is the table the holds the mission relation/edge.
	MissionTable = "departments"
	// MissionInverseTable is the table name for the Mission entity.
	// It exists in this package in order to avoid circular dependency with the "mission" package.
	MissionInverseTable = "missions"
	// MissionColumn is the table column denoting the mission relation/edge.
	MissionColumn = "mission_id"
	// DoctorTable is the table the holds the doctor relation/edge.
	DoctorTable = "departments"
	// DoctorInverseTable is the table name for the Doctor entity.
	// It exists in this package in order to avoid circular dependency with the "doctor" package.
	DoctorInverseTable = "doctors"
	// DoctorColumn is the table column denoting the doctor relation/edge.
	DoctorColumn = "doctor_id"
	// OfficesTable is the table the holds the offices relation/edge.
	OfficesTable = "offices"
	// OfficesInverseTable is the table name for the Office entity.
	// It exists in this package in order to avoid circular dependency with the "office" package.
	OfficesInverseTable = "offices"
	// OfficesColumn is the table column denoting the offices relation/edge.
	OfficesColumn = "department_id"
)

// Columns holds all SQL columns for department fields.
var Columns = []string{
	FieldID,
	FieldDepartmentType,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Department type.
var ForeignKeys = []string{
	"doctor_id",
	"mission_id",
}

var (
	// DepartmentTypeValidator is a validator for the "DepartmentType" field. It is called by the builders before save.
	DepartmentTypeValidator func(string) error
	// NameValidator is a validator for the "Name" field. It is called by the builders before save.
	NameValidator func(string) error
)
