/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntDepartment,
    EntDepartmentFromJSON,
    EntDepartmentFromJSONTyped,
    EntDepartmentToJSON,
    EntDisease,
    EntDiseaseFromJSON,
    EntDiseaseFromJSONTyped,
    EntDiseaseToJSON,
    EntGender,
    EntGenderFromJSON,
    EntGenderFromJSONTyped,
    EntGenderToJSON,
    EntOffice,
    EntOfficeFromJSON,
    EntOfficeFromJSONTyped,
    EntOfficeToJSON,
    EntPosition,
    EntPositionFromJSON,
    EntPositionFromJSONTyped,
    EntPositionToJSON,
    EntSchedule,
    EntScheduleFromJSON,
    EntScheduleFromJSONTyped,
    EntScheduleToJSON,
    EntSpecialdoctor,
    EntSpecialdoctorFromJSON,
    EntSpecialdoctorFromJSONTyped,
    EntSpecialdoctorToJSON,
    EntTitle,
    EntTitleFromJSON,
    EntTitleFromJSONTyped,
    EntTitleToJSON,
    EntTraining,
    EntTrainingFromJSON,
    EntTrainingFromJSONTyped,
    EntTrainingToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntDoctorEdges
 */
export interface EntDoctorEdges {
    /**
     * Departments holds the value of the departments edge.
     * @type {Array<EntDepartment>}
     * @memberof EntDoctorEdges
     */
    departments?: Array<EntDepartment>;
    /**
     * 
     * @type {EntDisease}
     * @memberof EntDoctorEdges
     */
    disease?: EntDisease;
    /**
     * 
     * @type {EntGender}
     * @memberof EntDoctorEdges
     */
    gender?: EntGender;
    /**
     * Offices holds the value of the offices edge.
     * @type {Array<EntOffice>}
     * @memberof EntDoctorEdges
     */
    offices?: Array<EntOffice>;
    /**
     * 
     * @type {EntPosition}
     * @memberof EntDoctorEdges
     */
    position?: EntPosition;
    /**
     * Schedules holds the value of the schedules edge.
     * @type {Array<EntSchedule>}
     * @memberof EntDoctorEdges
     */
    schedules?: Array<EntSchedule>;
    /**
     * Specialdoctors holds the value of the specialdoctors edge.
     * @type {Array<EntSpecialdoctor>}
     * @memberof EntDoctorEdges
     */
    specialdoctors?: Array<EntSpecialdoctor>;
    /**
     * 
     * @type {EntTitle}
     * @memberof EntDoctorEdges
     */
    title?: EntTitle;
    /**
     * Trainings holds the value of the trainings edge.
     * @type {Array<EntTraining>}
     * @memberof EntDoctorEdges
     */
    trainings?: Array<EntTraining>;
}

export function EntDoctorEdgesFromJSON(json: any): EntDoctorEdges {
    return EntDoctorEdgesFromJSONTyped(json, false);
}

export function EntDoctorEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntDoctorEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'departments': !exists(json, 'Departments') ? undefined : ((json['Departments'] as Array<any>).map(EntDepartmentFromJSON)),
        'disease': !exists(json, 'Disease') ? undefined : EntDiseaseFromJSON(json['Disease']),
        'gender': !exists(json, 'Gender') ? undefined : EntGenderFromJSON(json['Gender']),
        'offices': !exists(json, 'Offices') ? undefined : ((json['Offices'] as Array<any>).map(EntOfficeFromJSON)),
        'position': !exists(json, 'Position') ? undefined : EntPositionFromJSON(json['Position']),
        'schedules': !exists(json, 'Schedules') ? undefined : ((json['Schedules'] as Array<any>).map(EntScheduleFromJSON)),
        'specialdoctors': !exists(json, 'Specialdoctors') ? undefined : ((json['Specialdoctors'] as Array<any>).map(EntSpecialdoctorFromJSON)),
        'title': !exists(json, 'Title') ? undefined : EntTitleFromJSON(json['Title']),
        'trainings': !exists(json, 'Trainings') ? undefined : ((json['Trainings'] as Array<any>).map(EntTrainingFromJSON)),
    };
}

export function EntDoctorEdgesToJSON(value?: EntDoctorEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'departments': value.departments === undefined ? undefined : ((value.departments as Array<any>).map(EntDepartmentToJSON)),
        'disease': EntDiseaseToJSON(value.disease),
        'gender': EntGenderToJSON(value.gender),
        'offices': value.offices === undefined ? undefined : ((value.offices as Array<any>).map(EntOfficeToJSON)),
        'position': EntPositionToJSON(value.position),
        'schedules': value.schedules === undefined ? undefined : ((value.schedules as Array<any>).map(EntScheduleToJSON)),
        'specialdoctors': value.specialdoctors === undefined ? undefined : ((value.specialdoctors as Array<any>).map(EntSpecialdoctorToJSON)),
        'title': EntTitleToJSON(value.title),
        'trainings': value.trainings === undefined ? undefined : ((value.trainings as Array<any>).map(EntTrainingToJSON)),
    };
}


