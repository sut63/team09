/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntDoctor,
    EntDoctorFromJSON,
    EntDoctorFromJSONTyped,
    EntDoctorToJSON,
    EntMission,
    EntMissionFromJSON,
    EntMissionFromJSONTyped,
    EntMissionToJSON,
    EntOffice,
    EntOfficeFromJSON,
    EntOfficeFromJSONTyped,
    EntOfficeToJSON,
    EntSchedule,
    EntScheduleFromJSON,
    EntScheduleFromJSONTyped,
    EntScheduleToJSON,
    EntSpecialist,
    EntSpecialistFromJSON,
    EntSpecialistFromJSONTyped,
    EntSpecialistToJSON,
    EntTraining,
    EntTrainingFromJSON,
    EntTrainingFromJSONTyped,
    EntTrainingToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntDepartmentEdges
 */
export interface EntDepartmentEdges {
    /**
     * 
     * @type {EntDoctor}
     * @memberof EntDepartmentEdges
     */
    doctor?: EntDoctor;
    /**
     * 
     * @type {EntMission}
     * @memberof EntDepartmentEdges
     */
    mission?: EntMission;
    /**
     * Offices holds the value of the offices edge.
     * @type {Array<EntOffice>}
     * @memberof EntDepartmentEdges
     */
    offices?: Array<EntOffice>;
    /**
     * Schedules holds the value of the schedules edge.
     * @type {Array<EntSchedule>}
     * @memberof EntDepartmentEdges
     */
    schedules?: Array<EntSchedule>;
    /**
     * Specialists holds the value of the specialists edge.
     * @type {Array<EntSpecialist>}
     * @memberof EntDepartmentEdges
     */
    specialists?: Array<EntSpecialist>;
    /**
     * Trainings holds the value of the trainings edge.
     * @type {Array<EntTraining>}
     * @memberof EntDepartmentEdges
     */
    trainings?: Array<EntTraining>;
}

export function EntDepartmentEdgesFromJSON(json: any): EntDepartmentEdges {
    return EntDepartmentEdgesFromJSONTyped(json, false);
}

export function EntDepartmentEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntDepartmentEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'doctor': !exists(json, 'doctor') ? undefined : EntDoctorFromJSON(json['doctor']),
        'mission': !exists(json, 'mission') ? undefined : EntMissionFromJSON(json['mission']),
        'offices': !exists(json, 'offices') ? undefined : ((json['offices'] as Array<any>).map(EntOfficeFromJSON)),
        'schedules': !exists(json, 'schedules') ? undefined : ((json['schedules'] as Array<any>).map(EntScheduleFromJSON)),
        'specialists': !exists(json, 'specialists') ? undefined : ((json['specialists'] as Array<any>).map(EntSpecialistFromJSON)),
        'trainings': !exists(json, 'trainings') ? undefined : ((json['trainings'] as Array<any>).map(EntTrainingFromJSON)),
    };
}

export function EntDepartmentEdgesToJSON(value?: EntDepartmentEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'doctor': EntDoctorToJSON(value.doctor),
        'mission': EntMissionToJSON(value.mission),
        'offices': value.offices === undefined ? undefined : ((value.offices as Array<any>).map(EntOfficeToJSON)),
        'schedules': value.schedules === undefined ? undefined : ((value.schedules as Array<any>).map(EntScheduleToJSON)),
        'specialists': value.specialists === undefined ? undefined : ((value.specialists as Array<any>).map(EntSpecialistToJSON)),
        'trainings': value.trainings === undefined ? undefined : ((value.trainings as Array<any>).map(EntTrainingToJSON)),
    };
}


