/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntPlaylist,
    EntPlaylistFromJSON,
    EntPlaylistFromJSONTyped,
    EntPlaylistToJSON,
    EntVideo,
    EntVideoFromJSON,
    EntVideoFromJSONTyped,
    EntVideoToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntUserEdges
 */
export interface EntUserEdges {
    /**
     * Playlists holds the value of the playlists edge.
     * @type {Array<EntPlaylist>}
     * @memberof EntUserEdges
     */
    playlists?: Array<EntPlaylist>;
    /**
     * Videos holds the value of the videos edge.
     * @type {Array<EntVideo>}
     * @memberof EntUserEdges
     */
    videos?: Array<EntVideo>;
}

export function EntUserEdgesFromJSON(json: any): EntUserEdges {
    return EntUserEdgesFromJSONTyped(json, false);
}

export function EntUserEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntUserEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'playlists': !exists(json, 'playlists') ? undefined : ((json['playlists'] as Array<any>).map(EntPlaylistFromJSON)),
        'videos': !exists(json, 'videos') ? undefined : ((json['videos'] as Array<any>).map(EntVideoFromJSON)),
    };
}

export function EntUserEdgesToJSON(value?: EntUserEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'playlists': value.playlists === undefined ? undefined : ((value.playlists as Array<any>).map(EntPlaylistToJSON)),
        'videos': value.videos === undefined ? undefined : ((value.videos as Array<any>).map(EntVideoToJSON)),
    };
}


