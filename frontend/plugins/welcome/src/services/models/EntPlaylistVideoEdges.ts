/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntPlaylist,
    EntPlaylistFromJSON,
    EntPlaylistFromJSONTyped,
    EntPlaylistToJSON,
    EntResolution,
    EntResolutionFromJSON,
    EntResolutionFromJSONTyped,
    EntResolutionToJSON,
    EntVideo,
    EntVideoFromJSON,
    EntVideoFromJSONTyped,
    EntVideoToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntPlaylistVideoEdges
 */
export interface EntPlaylistVideoEdges {
    /**
     * 
     * @type {EntPlaylist}
     * @memberof EntPlaylistVideoEdges
     */
    playlist?: EntPlaylist;
    /**
     * 
     * @type {EntResolution}
     * @memberof EntPlaylistVideoEdges
     */
    resolution?: EntResolution;
    /**
     * 
     * @type {EntVideo}
     * @memberof EntPlaylistVideoEdges
     */
    video?: EntVideo;
}

export function EntPlaylistVideoEdgesFromJSON(json: any): EntPlaylistVideoEdges {
    return EntPlaylistVideoEdgesFromJSONTyped(json, false);
}

export function EntPlaylistVideoEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntPlaylistVideoEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'playlist': !exists(json, 'playlist') ? undefined : EntPlaylistFromJSON(json['playlist']),
        'resolution': !exists(json, 'resolution') ? undefined : EntResolutionFromJSON(json['resolution']),
        'video': !exists(json, 'video') ? undefined : EntVideoFromJSON(json['video']),
    };
}

export function EntPlaylistVideoEdgesToJSON(value?: EntPlaylistVideoEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'playlist': EntPlaylistToJSON(value.playlist),
        'resolution': EntResolutionToJSON(value.resolution),
        'video': EntVideoToJSON(value.video),
    };
}


